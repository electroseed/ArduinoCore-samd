#include "variant.h"

/*
* Pins descriptions
*/
const PinDescription g_APinDescription[] =
{
	// 0..13 - Digital pins
	// ----------------------
	{PORTA,23,PIO_SERCOM_ALT,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_7},							 		// D0 SCL : ALT_SERCOM5/PAD[1]
	{PORTA,22,PIO_SERCOM_ALT,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_6},							 		// D1 SDA : ALT_SERCOM5/PAD[0]
	{PORTA,28,PIO_COM,PIN_ATTR_NONE,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 											// D2 I2C INT :  USB Host enable
	{PORTA,27,PIO_OUTPUT,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE},									// D3
	{PORTB,23,PIO_SERCOM_ALT,PIN_ATTR_NONE,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 									// D4
	{PORTB,22,PIO_SERCOM_ALT,PIN_ATTR_NONE,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 									// D5
	{PORTA,21,PIO_SERCOM_ALT,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH7,TCC0_CH7,EXTERNAL_INT_5}, 		// D6 RX1 : ALT_SERCOM3/PAD[3]
	{PORTA,20,PIO_SERCOM_ALT,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH6,TCC0_CH6,EXTERNAL_INT_4}, 		// D7 TX1 : ALT_SERCOM3/PAD[2]
	{PORTA,19,PIO_PWM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH3,TCC0_CH3,EXTERNAL_INT_3}, 				// D8 RX2 : SERCOM1/PAD[3]
	{PORTA,18,PIO_PWM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH2,TCC0_CH2,EXTERNAL_INT_2}, 				// D9 TX2 : SERCOM1/PAD[2]
	{PORTA,16,PIO_TIMER,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER,No_ADC_Channel,PWM2_CH0,TCC2_CH0,EXTERNAL_INT_0}, 					// D10
	{PORTA,0,PIO_DIGITAL,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_0}, 										// D11
	{PORTA,1,PIO_DIGITAL,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_1}, 										// D12
	{PORTA,17,PIO_PWM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER,No_ADC_Channel,PWM2_CH1,TCC2_CH1,EXTERNAL_INT_1}, 					// D13 LED

	// 14..27 - Analog pins
	// --------------------
	{PORTA,2,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel0,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_2}, 											// D14 A0
	{PORTA,3,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel1,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_3}, 											// D15 A1  DAC
	{PORTB,8,PIO_ANALOG,PIN_ATTR_ANALOG|PIN_ATTR_PWM|PIN_ATTR_TIMER,ADC_Channel2,PWM4_CH0,TC4_CH0,EXTERNAL_INT_8}, 						// D16 A2
	{PORTB,9,PIO_ANALOG,PIN_ATTR_ANALOG|PIN_ATTR_PWM|PIN_ATTR_TIMER,ADC_Channel3,PWM4_CH1,TC4_CH1,EXTERNAL_INT_9}, 						// D17 A3
	{PORTA,4,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel4,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_4}, 											// D18 A4
	{PORTA,7,PIO_TIMER,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER,ADC_Channel7,PWM1_CH1,TCC1_CH1,EXTERNAL_INT_7}, 					// D19 A5
	{PORTA,5,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel5,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_5}, 											// D20 A6
	{PORTA,6,PIO_ANALOG,PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER,ADC_Channel6,PWM1_CH0,TCC1_CH0,EXTERNAL_INT_6}, 	// D21 A7
	{PORTA,8,PIO_SERCOM_ALT,PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER,ADC_Channel16,PWM0_CH0,TCC0_CH0,EXTERNAL_INT_NMI}, // D22 A8	MOSI 	: SERCOM0/PAD[0] / SDA1 : ALT_SERCOM2/PAD[0]
	{PORTA,9,PIO_SERCOM_ALT,PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER,ADC_Channel17,PWM0_CH1,TCC0_CH1,EXTERNAL_INT_9}, 	// D23 A9	SCK		: SERCOM0/PAD[1] / SCL1 : ALT_SERCOM2/PAD[1]
	{PORTA,10,PIO_ANALOG,PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL,ADC_Channel18,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_10}, 						// D24 A10	CS		: SERCOM0/PAD[2]
	{PORTA,11,PIO_ANALOG,PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL,ADC_Channel19,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_11}, 						// D25 A11	MISO	: SERCOM0/PAD[3]
	{PORTB,3,PIO_ANALOG,PIN_ATTR_ANALOG|PIN_ATTR_DIGITAL,ADC_Channel11,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 						// D26 A12
	{PORTB,2,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel10,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_2}, 											// D27 A13

	// 28..35
	// ----------------------
	{PORTB,10,PIO_PWM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH4,TCC0_CH4,EXTERNAL_INT_10},				// D28 CE_NRF
	{PORTB,11,PIO_PWM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH5,TCC0_CH5,EXTERNAL_INT_11},				// D29 IRQ_NRF
	{PORTA,12,PIO_SERCOM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH6,TCC0_CH6,EXTERNAL_INT_12}, 			// D30 MISO1 	: ALT_SERCOM4/PAD[0] / SDA2 : SERCOM2/PAD[0]
	{PORTA,13,PIO_SERCOM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH7,TCC0_CH7,EXTERNAL_INT_13}, 			// D31 CS1	 	: ALT_SERCOM4/PAD[1] / SCL2 : SERCOM2/PAD[1]
	{PORTA,14,PIO_SERCOM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH4,TCC0_CH4,EXTERNAL_INT_14},			// D32 MOSI1 	: ALT_SERCOM4/PAD[2]
	{PORTA,15,PIO_SERCOM,PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT,No_ADC_Channel,PWM0_CH5,TCC0_CH5,EXTERNAL_INT_15}, 			// D33 SCK1 	: ALT_SERCOM4/PAD[3]
	{PORTA,31,PIO_PWM,PIN_ATTR_DIGITAL | PIO_SERCOM,No_ADC_Channel,NOT_ON_PWM,TCC1_CH1,EXTERNAL_INT_11}, 								// D34 SWDIO
	{PORTA,30,PIO_PWM,PIN_ATTR_DIGITAL | PIO_SERCOM,No_ADC_Channel,NOT_ON_PWM,TCC1_CH0,EXTERNAL_INT_10}, 								// D35 SWDCK

	// 36..37 - USB
	// --------------------
	{PORTA,24, PIO_COM, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DM
	{PORTA,25, PIO_COM, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DP
};

extern "C" {
	unsigned int PINCOUNT_fn() {
		return (sizeof(g_APinDescription) / sizeof(g_APinDescription[0]));
	}
}

const void* g_apTCInstances[TCC_INST_NUM + TC_INST_NUM] = {TCC0,TCC1,TCC2,TC3,TC4,TC5};

// Multi-serial objects instantiation
SERCOM sercom0(SERCOM0);			// SPI
SERCOM sercom1(SERCOM1);			// Serial2
SERCOM sercom2(SERCOM2);			// I2C1
SERCOM sercom3(SERCOM3);			// Serial1
SERCOM sercom4(SERCOM4);			// SPI1
SERCOM sercom5(SERCOM5);			// I2C

Uart Serial1(&sercom3, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX, UPIO_SERCOM_ALT);

void SERCOM3_Handler()
{
	Serial1.IrqHandler();
}

Uart Serial2(&sercom1, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX, UPIO_SERCOM);

void SERCOM1_Handler()
{
	Serial2.IrqHandler();
}
