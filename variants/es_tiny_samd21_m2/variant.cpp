#include "variant.h"

/*
* Pins descriptions
*/
const PinDescription g_APinDescription[] =
{
	// 0..13 - Digital pins
	// ----------------------
	{PORTA,30,PIO_PWM,PIN_ATTR_DIGITAL | PIO_SERCOM,No_ADC_Channel,NOT_ON_PWM,TCC1_CH0,EXTERNAL_INT_10}, 					// SWDCK - D0 - Tx1
	{PORTA,31,PIO_PWM,PIN_ATTR_DIGITAL | PIO_SERCOM,No_ADC_Channel,NOT_ON_PWM,TCC1_CH1,EXTERNAL_INT_11}, 					// SWDIO - D1 - Rx1

	{PORTA,22,PIO_SERCOM,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_6}, 							// SDA   - D2 - Tx3
	{PORTA,23,PIO_SERCOM,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_7}, 							// SCL   - D3 - Rx3

	{PORTB,10,PIO_PWM,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER_ALT),No_ADC_Channel,PWM0_CH4,TCC0_CH4,EXTERNAL_INT_10}, // PWM0  - D4
	{PORTB,11,PIO_PWM,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER_ALT),No_ADC_Channel,PWM0_CH5,TCC0_CH5,EXTERNAL_INT_11}, // PWM1  - D5
	{PORTA,12,PIO_PWM,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER),No_ADC_Channel,PWM2_CH0,TCC0_CH6,EXTERNAL_INT_12}, // PWM2  - D6
	{PORTA,13,PIO_PWM,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER),No_ADC_Channel,PWM2_CH1,TCC0_CH7,EXTERNAL_INT_13},	// PWM3  - D7

	{PORTA,27,PIO_OUTPUT,PIN_ATTR_DIGITAL,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 						// D8    - G6
	{PORTA,14,PIO_DIGITAL,(PIN_ATTR_DIGITAL),No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_14},						// D9
	{PORTA,15,PIO_TIMER,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER),No_ADC_Channel,PWM3_CH1,TC3_CH1,EXTERNAL_INT_15},// D10
	{PORTA,20,PIO_TIMER_ALT,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER_ALT),No_ADC_Channel,PWM0_CH6,TCC0_CH6,EXTERNAL_INT_4}, // D11
	{PORTA,21,PIO_TIMER_ALT,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER_ALT),No_ADC_Channel,PWM0_CH7,TCC0_CH7,EXTERNAL_INT_5}, // D12

	{PORTA,17,PIO_PWM,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER),No_ADC_Channel,PWM2_CH1,TCC2_CH1,EXTERNAL_INT_1}, // D13 / LED

	// 14..26 - Analog pins
	// --------------------
	{PORTA,2,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel0,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_2}, 							// A0 - D14
	{PORTA,3,PIO_ANALOG,PIN_ATTR_ANALOG,ADC_Channel1,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_3}, 							// A1 - D15
	{PORTB,8,PIO_ANALOG,(PIN_ATTR_PWM | PIN_ATTR_TIMER),ADC_Channel2,PWM4_CH0,TC4_CH0,EXTERNAL_INT_8}, 					// A2 - D16
	{PORTB,9,PIO_ANALOG,(PIN_ATTR_PWM | PIN_ATTR_TIMER),ADC_Channel3,PWM4_CH1,TC4_CH1,EXTERNAL_INT_9}, 					// A3 - D17
	{PORTA,6,PIO_ANALOG,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER | PIN_ATTR_ANALOG),ADC_Channel6,PWM1_CH0,TCC1_CH0,EXTERNAL_INT_6}, // A4 - D18
	{PORTA,5,PIO_ANALOG,0,ADC_Channel5,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_5}, 										// A5 - D19
	{PORTA,4,PIO_ANALOG,0,ADC_Channel4,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_4}, 										// A6 - D20
	{PORTB,3,PIO_OUTPUT,PIN_ATTR_DIGITAL,ADC_Channel11,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 						// A7 - D21
	{PORTA,7,PIO_PWM,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM),ADC_Channel7,PWM1_CH1,NOT_ON_TIMER,EXTERNAL_INT_NONE}, 			// A8 - D22
	{PORTA,11,PIO_ANALOG,(PIN_ATTR_DIGITAL | PIN_ATTR_ANALOG),ADC_Channel19,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_11}, 	// A9 - D23 / Rx2 / MISO
	{PORTA,10,PIO_ANALOG,(PIN_ATTR_DIGITAL | PIN_ATTR_ANALOG),ADC_Channel18,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_10}, 	// A10 - D24 / Tx2 / CS
	{PORTA,9,PIO_SERCOM_ALT,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER | PIN_ATTR_ANALOG),ADC_Channel17,PWM0_CH1,TCC0_CH1,EXTERNAL_INT_9},    // A11 - D25 / SCK / SCL1
	{PORTA,8,PIO_SERCOM_ALT,(PIN_ATTR_DIGITAL | PIN_ATTR_PWM | PIN_ATTR_TIMER | PIN_ATTR_ANALOG),ADC_Channel16,PWM0_CH0,TCC0_CH0,EXTERNAL_INT_NMI},  // A12 - D26 / MOSI / SDA1

	// 27..29 - USB
	// --------------------
	{PORTA,28,PIO_COM,PIN_ATTR_NONE,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, // I2C_INT - USB Host enable
	{PORTA,24,PIO_COM,PIN_ATTR_NONE,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, // USB/DM
	{PORTA,25,PIO_COM,PIN_ATTR_NONE,No_ADC_Channel,NOT_ON_PWM,NOT_ON_TIMER,EXTERNAL_INT_NONE}, // USB/DP
};

extern "C" {
	unsigned int PINCOUNT_fn() {
		return (sizeof(g_APinDescription) / sizeof(g_APinDescription[0]));
	}
}

const void* g_apTCInstances[TCC_INST_NUM + TC_INST_NUM] = {TCC0,TCC1,TCC2,TC3,TC4,TC5};

// Multi-serial objects instantiation
SERCOM sercom0(SERCOM0);			// Serial2
SERCOM sercom1(SERCOM1);			// Serial1 or SPI1
SERCOM sercom2(SERCOM2);			// I2C1
SERCOM sercom3(SERCOM3);			// I2C
SERCOM sercom4(SERCOM4);			// SPI Master or SPI Slave
SERCOM sercom5(SERCOM5);			// Serial3

Uart Serial1(&sercom1, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX, UPIO_SERCOM_ALT);

void SERCOM1_Handler()
{
	Serial1.IrqHandler();
}

Uart Serial2(&sercom0, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX, UPIO_SERCOM);

void SERCOM0_Handler()
{
	Serial2.IrqHandler();
}
/*	Fucks up project with MLX90393 and Motors https://www.electroseed.fr/shop/gui/index.php?cID=1422&ws=1399&project=1399
Uart Serial3(&sercom5, PIN_SERIAL3_RX, PIN_SERIAL3_TX, PAD_SERIAL3_RX, PAD_SERIAL3_TX, UPIO_SERCOM_ALT);

void SERCOM5_Handler()
{
	Serial3.IrqHandler();
}
*/